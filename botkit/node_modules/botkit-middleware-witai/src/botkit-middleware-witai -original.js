// var wit = require('node-wit');

// module.exports = function(config) {

//     if (!config || !config.token) {
//         throw new Error('No wit.ai API token specified');
//     }

//     if (!config.minimum_confidence) {
//         config.minimum_confidence = 0.5;
//     }

//     var middleware = {};

//     middleware.receive = function(bot, message, next) {
//         if (message.text) {
//             wit.captureTextIntent(config.token, message.text, function(err, res) {
//                 if (err) {
//                     next(err);
//                 } else {
//                     // sort in descending order of confidence so the most likely match is first.
//                     console.log(JSON.stringify(res));
//                     message.intents = res.outcomes.sort(function(a,b) {
//                         return b.confidence - a.confidence;
//                     });
//                     next();
//                 }
//             });
//         }

//     };

//     middleware.hears = function(tests, message) {
// 		// console.log();
// // console.log(message)
// //console.log(message)
//        obj = message.intents[0].entities;
//         var count = Object.keys(obj).length;
// 		// console.log();
// 		// console.log('this is a response');
//      // console.log(message.intents[0]);
// 	 // console.log();
	 
// 	  // console.log();
// 	   /* console.log(tests[0]); */
	   
	
//         if (count != 0) {
            
//                for (const prop in obj){
				
// 				for (var i = 0; i < message.intents[0].entities[prop].length; i++) {
// 				 // console.log(message.intents[0].entities[prop][i].value);
// 					for (var t = 0; t < tests.length; t++) {
//         //             console.log(tests[t]);
// 				    // console.log(t);	
//                     if (message.intents[0].entities[prop][i].value == tests[t] &&
//                      message.intents[0].entities[prop][i].confidence >= config.minimum_confidence) {

//                         return true;
//                     }
//                 }
//             }
//         }
// }
// 		//console.log('now its false');
//         return false;
// };

// middleware.process=function(text){

// var args = Array.prototype.slice.call(arguments)
//     var intents = new middleware.Intents()
//     var matched = false
//     args.shift()
//     console.log('in process');
//     console.log(text);
//     console.log(config.token);
//     wit.captureTextIntent(config.token, text, function (err, res) {
//       if (err) {
//         return console.error('Wit.ai Error: ', err)
//     }
//     console.log(text);
//     console.log('Outcomes are ');
//         console.log(res.outcomes);
//       // only consider the 1st outcome
//       if (res.outcomes && res.outcomes.length > 0) {
//         var outcome = res.outcomes[0]
//         var intent = 'schedule'      
//         console.log();
//         console.log(intent);
//         console.log('outcome is ');
//         console.log();
//         console.log(outcome);
//         args.push(outcome)
//         console.log('checking value of intents : '+intents._intents[intent])
//         if (intents._intents[intent]) {
//           intents._intents[intent].forEach(function (registration) {
//             if (!matched && outcome.confidence >= registration.confidence) {
//               matched = true
//               registration.fn.apply(undefined, args)
//             }
//           })
//         } else if (intents._any) {
//           matched = true
//           intents._any.apply(undefined, args)
//         }
//       }

//       // there were no matched outcomes or matched routes
//       if (!matched) intents._catchall.apply(undefined, args)
//     })

//     console.log('Intents are ');
//     console.log(intents);
//     return intents
// }

// middleware.Intents=function(){
//     console.log('In intents');
//     var self = this
//   self._intents = {}
//   self._catchall = function () {}

//   self.hears = function (name, confidence, fn) {
//      console.log('In self.hears');
//     var registration = {
         
//       confidence: confidence,
//       fn: fn
//     }
//     console.log(' registration : '+ registration);
//     console.log(self._intents[name]);
//     console.log([registration]);
//     if (!self._intents[name]) {
//          console.log('If no intent');
//       self._intents[name] = [registration]
//     } else {
//       self._intents[name].push(registration)
//     }
//     return self
//   }

//   self.otherwise = function (fn) {
//     self._catchall = fn
//     return self
//   }

//   self.any = function (fn) {
//     self._any = fn
//     return self
//   }
// }

// 	// console.log(middleware);
//     return middleware;

// };
